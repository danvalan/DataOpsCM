name: Create new branch

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'Branch name'
        required: true
        type: string
        default: 'dev'
      projectName:
        description: 'Project name'
        required: true
        type: string
        default: 'DEV branch of project ...'
      addUserWithEmail:
        description: 'Add user with email'
        required: false
        type: string

jobs:
  createBranch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create temp dir
        run: | 
            mkdir temp
            chmod 777 temp
      - name: Show env variables
        run: env
      - name: Create temp dir, create create project script without orgId
        if: "${{vars.CM_ORGANIZATION_ID == ''}}"
        run: | 
            cd temp
            echo -e "login\ncreateProject --title \"${{inputs.projectName}}\"\ndumpProject --skipData" > createProjectScript.txt
            cat createProjectScript.txt
      - name: Create temp dir, create create project script with orgId
        if: "${{vars.CM_ORGANIZATION_ID != ''}}"
        run: | 
            cd temp
            echo -e "login\ncreateProject --title \"${{inputs.projectName}}\" --organizationId ${vars.CM_ORGANIZATION_ID}\ndumpProject --skipData" > createProjectScript.txt
            cat createProjectScript.txt
      - name: Run docker CleverMaps Shell with create project script
        uses: addnab/docker-run-action@v3
        with:
          image: clevermaps/shell:latest
          options: --rm --name cm-shell --pull always --volume ${{ github.workspace }}/temp:/work:z -v ${{ github.workspace }}/temp/createProjectScript.txt:/createProjectScript.txt --env CM_ACCESS_TOKEN=${{ secrets.ACCESSTOKEN }} 
          run: java -jar "${HOME}/${can_shell_filename}" --cmdfile /createProjectScript.txt
      - name: Get projectId
        run: | 
            cd temp
            rm createProjectScript.txt
            echo "NEW_PROJECT_ID="$(ls)"" >> $GITHUB_ENV
      - name: Create branch
        run: | 
            git config user.name github-actions
            git config user.email github-actions@github.com
            git checkout -b "${env.NEW_PROJECT_ID}/${{inputs.branchName}}"
            
            
            
